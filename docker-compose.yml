services:
  db:
    image: postgres:16-alpine
    container_name: gcal-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gcalapp
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 3s
      retries: 30

  db-init:
    image: postgres:16-alpine
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGPASSWORD: postgres
    entrypoint:
      - sh
      - -lc
      - |
        psql -h db -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname='gcalapp'" | grep -q 1 \
        || psql -h db -U postgres -c "CREATE DATABASE gcalapp;"

  api:
    build:
      context: ./api
    env_file:
      - ./api/.env.docker
    depends_on:
      db:
        condition: service_healthy
      db-init:
        condition: service_started
    ports:
      - "4000:4000"
    # DO NOT set `environment: DATABASE_URL: ${DATABASE_URL}` unless you define it.
    # It can override the env_file with an empty value.

  web:
    build:
      context: ./web
      args:
        VITE_API_BASE_URL: http://localhost:4000
    ports:
      - "8080:8080"
    depends_on:
      - api

volumes:
  pgdata: {}
